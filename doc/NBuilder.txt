NBuilder 实现说明

@1 概述：
基本内容参见 YSLib 项目的 [Documentation::NPL] ，以下引用为 [NPL] 。

@2 NBuilder 支持特性：
以下支持的特性是公开接口，但可能在未来版本被修改、转移至 YSLib 实现的 NPL 标准库和移除。
实现可能支持其它不公开接口。

@2.1 支持函数：
所有函数都在 NPL 基础环境中扩展。
模块约定：
本节约定以下求值得到的操作数：
<port> ：端口。
<input-port> ：输入端口，是 <port> 的子类型。
打开操作关联参数指定的实体到端口使之能蕴含具有 I/O 副作用的操作。端口被销毁后自动关闭。
端口的类型映射和实体和端口的关系由实现定义。
实体包含外部文件(file) 。
若打开文件失败，成功则结果是对应关联了对应实体的端口；则引起错误，其中诊断消息应包含参数值。
symbol-string? <object> ：判断参数是仅具有基本字符集中的一个实现定义的子集的字符的字符串，其中字符子集至少应当包含所有拉丁大小写字母、在标准库函数中可能出现的字符和 _ 。
open-input-file <string> ：打开以参数为文件名的文件为输入端口。
open-input-string <string> ：打开参数为输入端口。
basic-identifier? <object> ：判断参数是可作为词法上接受的标识符(@3.3.1) 的 <symbol> 且仅其字符串表示仅包含 symbol-string? 中的字符。
**原理**
端口提供和实现环境交互的 I/O 副作用。作用同 [RnRS] 和 [RnRK] 中的类似类型。ISO C 和 ISO C++ 等语言中的库的流(stream) 的概念指利用更一般的代理求值得到的惰性求值类型，不一定具有副作用。
同 [RnRS] ，符号不都能在源程序中直接表示，只有标识符在语法上直接支持而不需要转义。作为标识符的符号可视为 <symbol> 的子类型，这个函数即其类型谓词。另见 ftp://ftp.cs.utexas.edu/pub/garbage/cs345/schintro-v13/schintro_104.html 。
symbol-string? 中支持基本字符集([NPL @@3.3]) 。这些字符至少支持 NPLA1 标准库以及和 ISO C++ 互操作时使用的标识符的需要。

@2.2 实现定义行为：
端口的类型映射如下：
<port> 对应 ISO C++ std::ios_base 的派生类型。
<input-port> 对应 ISO C++ std::istream 或其派生类型。
open-input-file 的结果对应 YSLib::ifstream 或其派生类型。
open-input-string 的结果对应 YSLib::istringstream 或其派生类型。
symbol-string? 中支持的字符子集由 NPL::IsSymbol 实现判断，支持要求的应当包含的字符以及字符串 ".:@^~" 中的字符。

@2.3 实现注记：
当前实现抛出未指定的异常，抛出的异常消息包含参数值。

